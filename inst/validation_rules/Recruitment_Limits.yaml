# Defines checks to be applied to data loaded from the 'Baseline Demand' worksheet
# Requires 'validJudges' to be passed as a reference, e.g.
#
# confront(df, rules, ref = list(validJudges = c('Magistrates', 'DJMC')))

# TODO Would be nice to add one which checks that max recruitment defined is > expected
# number retiring...

rules:
  # dynamically selects all scenario cols: 4th column (Baseline) to last column
- expr: '`:=`(G, var_group(names(.)[4:ncol(.)]))'
  name: 'V1'
  label: ''
  description: ''
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: ''
  
- expr: 'G >= 0' # test applied to all scenario columns (selected above)
  name: 'Recruitment Limits >=0'
  label: 'Recruitment Limits for all scenarios >= zero'
  description: |
    Check Recruitment Limits are >= zero for Baseline + any defined scenarios
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      Recruitment Limits for all scenarios must be >= zero. Please check 
      values entered in Recruitment Limits worksheet.
  
- expr: 'is_unique(`Judge Type`, Region, Year)'
  name: 'duplicates'
  label: 'No duplicate rows'
  description: |
    Checks that there are no duplicate combinations of Judge Type / Region / Year
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      At least one combination of Judge Type / Region / Year is duplicated in
      the Recruitment Limits worksheet. Please check worksheet.

- expr: '`Judge Type` %in% validJudges'
  name: 'Valid Judges'
  label: 'Valid Judges'
  description: |
    Checks that only valid Judges are referred to
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      At least one row in the Recruitment Limits worksheet refers to an invalid
      Judge. Referred-to Judges must be as named in the Judges worksheet. 
      Check for typos.

- expr: 'Region %in% validRegions'
  name: 'Valid Regions'
  label: 'Valid Regions'
  description: |
    Checks that only valid Regions are referred to
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      At least one row in the Recruitment Limits worksheet refers to an invalid
      Region. Referred-to Regions must be as named in the Regions worksheet.
      Check for typos.

- expr: 'Year %in% validYears'
  name: 'Valid Years'
  label: 'Valid Years'
  description: |
    Checks that only valid Years are referred to
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      At least one row in the Recruitment Limits worksheet refers to an invalid
      Year. Referred-to Years must be as named in the Years worksheet.
      Check for typos.

- expr: 'is_complete(`Judge Type`, Region, Year)'
  name: 'No Missing Categories'
  label: 'No Missing Categories'
  description: |
    Checks no NAs in Judge Type, Region or Year field, which would happen if value invalid
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      At least one row in the Recruitment Limits worksheet refers to an invalid
      Judge Type, Region or Year. These must match those defined in the Judges, 
      Regions and Years worksheets. Check for typos.

- expr: 'nrow(.) == expectedNRow'
  name: 'Expected nrow'
  label: 'Expected number of rows'
  description: |
    Checks dataset contains the expected number of rows
  created: 2021-06-10
  meta:
    severity: error
    worksheet: 'Recruitment Limits'
    errorMessage: |
      The Recruitment Limits worksheet did not contain the expected number or rows.
      There should be one row for every combination of Judge Type / Region / Year.
